package Chapter_10_Traits.ex3



object Main extends App{
  println("from the repl (scala -Dscala.repl.power intp.types(\"scala.collection.BitSet\").tpe.baseTypeSeq.toList)\n")
  println("scala.collection.BitSet\nscala.collection.Set[Int]\nIterable[Int]\nscala.collection.BitSetLike[scala.collection.BitSet]\nscala.collection.SetLike[Int,scala.collection.BitSet] with scala.collection.SetLike[Int,scala.collection.Set[Int]]\nscala.collection.GenSet[Int]\nTraversable[Int]\nscala.collection.IterableLike[Int,scala.collection.BitSet] with scala.collection.IterableLike[Int,Iterable[Int]] with scala.collection.IterableLike[Int,scala.collection.Set[Int]]\nscala.collection.GenIterable[Int]\nscala.collection.GenSetLike[Int,scala.collection.BitSet] with scala.collection.GenSetLike[Int,scala.collection.GenSet[Int]] with scala.collection.GenSetLike[Int,scala.collection.Set[Int]]\nscala.collection.TraversableLike[Int,scala.collection.BitSet] with scala.collection.TraversableLike[Int,Iterable[Int]] with scala.collection.TraversableLike[Int,Traversable[Int]] with scala.collection.TraversableLike[Int,scala.collection.Set[Int]]\nscala.collection.GenTraversable[Int]\nscala.collection.GenIterableLike[Int,scala.collection.BitSet] with scala.collection.GenIterableLike[Int,Iterable[Int]] with scala.collection.GenIterableLike[Int,scala.collection.GenIterable[Int]] with scala.collection.GenIterableLike[Int,scala.collection.GenSet[Int]] with scala.collection.GenIterableLike[Int,scala.collection.Set[Int]]\nscala.collection.GenTraversableLike[Int,scala.collection.BitSet] with scala.collection.GenTraversableLike[Int,Iterable[Int]] with scala.collection.GenTraversableLike[Int,scala.collection.GenIterable[Int]] with scala.collection.GenTraversableLike[Int,Traversable[Int]] with scala.collection.GenTraversableLike[Int,scala.collection.GenTraversable[Int]] with scala.collection.GenTraversableLike[Int,scala.collection.GenSet[Int]] with scala.collection.GenTraversableLike[Int,scala.collection.Set[Int]]\nscala.collection.generic.GenericSetTemplate[Int,scala.collection.GenSet] with scala.collection.generic.GenericSetTemplate[Int,scala.collection.Set]\nscala.collection.TraversableOnce[Int]\nscala.collection.generic.GenericTraversableTemplate[Int,Iterable] with scala.collection.generic.GenericTraversableTemplate[Int,scala.collection.GenIterable] with scala.collection.generic.GenericTraversableTemplate[Int,scala.collection.GenTraversable] with scala.collection.generic.GenericTraversableTemplate[Int,Traversable] with scala.collection.generic.GenericTraversableTemplate[Int,scala.collection.GenSet] with scala.collection.generic.GenericTraversableTemplate[Int,scala.collection.Set]\nInt => Boolean\nscala.collection.GenTraversableOnce[Int]\nscala.collection.Parallelizable[Int,scala.collection.parallel.ParIterable[Int]] with scala.collection.Parallelizable[Int,scala.collection.parallel.ParSet[Int]]\nscala.collection.generic.Subtractable[Int,scala.collection.BitSet] with scala.collection.generic.Subtractable[Int,scala.collection.Set[Int]]\nScalaObject\nEquals\nscala.collection.generic.FilterMonadic[Int,scala.collection.BitSet] with scala.collection.generic.FilterMonadic[Int,Iterable[Int]] with scala.collection.generic.FilterMonadic[Int,Traversable[Int]] with scala.collection.generic.FilterMonadic[Int,scala.collection.Set[Int]]\nscala.collection.generic.HasNewBuilder[Int,scala.collection.BitSet] with scala.collection.generic.HasNewBuilder[Int,Iterable[Int]] with scala.collection.generic.HasNewBuilder[Int,scala.collection.GenIterable[Int]] with scala.collection.generic.HasNewBuilder[Int,Traversable[Int]] with scala.collection.generic.HasNewBuilder[Int,scala.collection.GenTraversable[Int]] with scala.collection.generic.HasNewBuilder[Int,scala.collection.GenSet[Int]] with scala.collection.generic.HasNewBuilder[Int,scala.collection.Set[Int]]\njava.lang.Object\nAny")
}
